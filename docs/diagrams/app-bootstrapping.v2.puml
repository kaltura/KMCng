@startuml
skinparam backgroundColor #EEEBDC
skinparam handwritten true

title KMC[ng] Application Bootstrapping Diagram
actor Angular
participant AngularRouter
box "KMC[ng] shell"
participant AppShell
participant BootstrappingRouter
participant KalturaAPIConfigAdapter
endbox
box "KMC[ng] infrastructure" #LightGreen
participant AppBootstrap
participant AppAuthService
participant AppConfigService
endbox
box "KMC[ng] Server"
participant KMCngServer as "Application Server"
endbox
box "Kaltura Server" #LightBlue
participant KalturaAPI
endbox


== Angular config phase ==

AppShell -> AppBootstrap  : register KalturaAPIConfigAdapter\n[post-config phase]
AngularRouter <- AppShell : register BootstrappingRouter\nin root route

 == Angular run phase ==

autonumber "<b> [00]"
Angular -> KalturaAPIConfigAdapter : << create >>
activate  KalturaAPIConfigAdapter
Angular -> AppConfigService : << create >>
activate  AppConfigService
Angular -> AppBootstrap : << create >>
activate AppBootstrap
Angular -> AppAuthService : << create >>
activate AppAuthService
Angular -> BootstrappingRouter : << create >>
activate BootstrappingRouter
BootstrappingRouter -> AppBootstrap : register to status changes

hnote over AppBootstrap: << handle 'pre-config' adapters >>
AppBootstrap -> AppConfigService : load()
activate AppConfigService
AppConfigService -> KMCngServer : get config file
activate KMCngServer
...
KMCngServer --> AppConfigService : << KMC[ng] config >>
destroy KMCngServer

AppConfigService -> AppConfigService: update status initialized
AppConfigService --> AppBootstrap: << initialized | failure >>
destroy AppConfigService

alt failure
AppBootstrap -> AppBootstrap : update status to 'failed'
AppBootstrap --> BootstrappingRouter : << status >>
BootstrappingRouter -> AppShell: navigate to error view
end

hnote over AppBootstrap: << handle 'post-config' adapters >>

AppBootstrap --> KalturaAPIConfigAdapter : execute()
activate KalturaAPIConfigAdapter


hnote over AppBootstrap: << handle 'pre-auth' adapters >>

AppBootstrap -> AppAuthService : load()
activate AppAuthService

alt has user token in local storage
    AppAuthService -> AppAuthService : get user token from local storage
    AppAuthService -> KalturaAPI: request user information
    activate KalturaAPI
    ...
    KalturaAPI --> AppAuthService: << user information | nothing if no session >>
    destroy KalturaAPI
    AppAuthService -> AppAuthService: update status authenticated / annonymous
else no user token found
    AppAuthService -> AppAuthService : update status annonymous
end
AppAuthService --> AppBootstrap : << updated auth status | failure >>
destroy AppAuthService

alt failure
AppBootstrap -> AppBootstrap : update status to 'failed'
AppBootstrap --> BootstrappingRouter : << status >>
BootstrappingRouter -> AppShell: navigate to error view
end

hnote over AppBootstrap: << handle 'post-auth' adapters >>

AppBootstrap -> AppBootstrap : update status to 'bootstrapped'
AppBootstrap --> BootstrappingRouter : << status >>

alt user authenticated
BootstrappingRouter -> AppShell : navigate to default view\nallow requested kmcng-app
else user is annonymous
BootstrappingRouter -> AppShell: navigate to login view
end

@enduml